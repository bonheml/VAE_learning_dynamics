#!/usr/bin/env python
import logging
from glob import glob
import hydra
import tensorflow as tf
from hydra.utils import instantiate
from omegaconf import OmegaConf
import numpy as np
from vae_ld.data.util import natural_sort
from vae_ld.visualisation.images import latent_traversal

logger = logging.getLogger("latent_traversal")


@hydra.main(config_path="config", config_name="traversal")
def do_traversal(cfg):
    logger.info("Config:\n{}".format(OmegaConf.to_yaml(cfg)))
    logger.info("Ensuring Tensorflow is seeded...")
    tf.random.set_seed(cfg.seed)
    sampler = instantiate(cfg.sampling)
    samples = sampler[0][0]
    greyscale = cfg.dataset.observation_shape[2] == 1
    model_file = sorted(glob(cfg.model_path), key=natural_sort)[-1]
    latent_traversal(model_file, cfg.fname, samples, greyscale, cfg.n_changes, cfg.range)


if __name__ == "__main__":
    do_traversal()
