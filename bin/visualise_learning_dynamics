#!/usr/bin/env python
import logging
from pathlib import Path
import hydra
from glob import glob
from hydra.utils import instantiate
from omegaconf import OmegaConf

logger = logging.getLogger(__name__)


@hydra.main(config_path="config/svcca/config.yaml")
def visualise(cfg):
    print("\n{0}\n{2:^80}\n{1}\n{3}{1}\n".format("-" * 80, "=" * 80, "Current visualiser config", cfg.pretty()))

    # Enabling creation of new config keys
    OmegaConf.set_struct(cfg, False)

    # Create params key if it does not exists
    if cfg.visualiser.params is None:
        cfg.visualiser.params = {}
    x = cfg.visualiser.files_paths
    files = [sorted(glob(i)) for i in x] if len(x) > 1 else sorted(glob(x[0]))
    cfg.visualiser.params["files"] = files
    cfg.visualiser.params["layer_names"] = cfg.layers.encoder + cfg.layers.decoder

    # Disabling creation of new config keys
    OmegaConf.set_struct(cfg, False)

    logger.info("Creating image subdirectory...")
    path = Path(cfg.visualiser.image_path)
    path.mkdir(parents=True, exist_ok=True)

    logger.info("Creating visualiser...")
    visualiser = instantiate(cfg.visualiser)

    logger.info("Computing plots...")
    visualiser.run(cfg.visualiser.gif_file)


if __name__ == "__main__":
    visualise()
